name: Template

on:
  push:
    paths:
      - templates/**
      - .github/markdown-templates/**
      - .github/scripts/**
      - README.md
    branches:
      - main
  workflow_dispatch:

jobs:
  update_templates:
    name: "Update Templates"
    runs-on: ubuntu-latest
    steps:
      - name: "Fetching Repository Contents"
        uses: actions/checkout@main
        
      - name: Add Badge Template include start and end lines
        shell: pwsh
        run: |
          Copy-Item 'README.md' -Destination 'README_COPY.md'
          $readme_path = ‘README_COPY.md’;
          $SELECT_START_STRING = Select-String -Path $readme_path -Pattern "<!-- START tr/.github@main/workflow-templates/common-cicd-workflows/workflows/badge-template.md -->";
          $SELECT_END_STRING = Select-String -Path $readme_path -Pattern "<!-- END tr/.github@main/workflow-templates/common-cicd-workflows/workflows/badge-template.md -->";
          if( $SELECT_END_STRING.Length -eq 0)
          {
            Write-Output "Adding badge template end line to README markdown";
            $readme_contents = Get-Content $readme_path;
            "<!-- END tr/.github@main/workflow-templates/common-cicd-workflows/workflows/badge-template.md -->”  + “`n” + $readme_contents + (Get-Content $readme_path -Raw) | Set-Content $readme_path;
          }
          if( $SELECT_START_STRING.Length -eq 0)
          {
            Write-Output "Adding badge template start line to README markdown";
            $readme_contents = Get-Content $readme_path;
            "<!-- START tr/.github@main/workflow-templates/common-cicd-workflows/workflows/badge-template.md -->”  + “`n” + $readme_contents + (Get-Content $readme_path -Raw) | Set-Content $readme_path;
          }
          else
          {
            Write-Output "Already having badge template lines";
          }

      - name: "Dynamic Badge Template Render"
        uses: varunsridharan/action-dynamic-readme@main
        with:
          files: |
            README_COPY.md=README.md
        env:
          GITHUB: ${{ secrets.GITHUB_TOKEN }}

